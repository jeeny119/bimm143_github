---
title: "Find a Gene Project: Alphafold"
author: "Yoonjin Lim (PID: A16850635)"
format: pdf
toc: true 
---

Question 9: 
Here we read the results from AlphaFold and try to interpret all the models and quality score metrics:

```{r}
library(bio3d)

pth <- "QuerySequence_93902/"
pdb.files <- list.files(path=pth, full.names= TRUE, pattern=".pdb")
```

Align and supperpose all these models. 

```{r}
file.exists(pdb.files)
```

```{r}
pdbs <- pdbaln(pdb.files, fit = TRUE, exefile="msa")
```

```{r}
pdbs
```

```{r}
#view.pdbs(pdbs)
```

```{r}
plot(pdbs$b[1,], typ ="l", ylim=c(0,100), ylab="pLDDT score")
lines(pdbs$b[2,], typ = "l", col="blue")
lines(pdbs$b[3,], typ = "l", col="green")
lines(pdbs$b[4,], typ = "l", col="orange")
lines(pdbs$b[5,], typ = "l", col="red")
```

Question 7: 

```{r}
library(seqinr)
```

```{r}
fasta1 <- read.fasta("muscle-I20250521-203828-0550-34864747-p1m.fa")
```

```{r}
library(pheatmap)
```


```{r}
aln2 <- list(nb = length(fasta1),
            nam = names(fasta1),
            seq = sapply(fasta1, function(x) paste(x, collapse = "")))

class(aln2) <- "alignment"
```

```{r}
class(fasta1)         
names(fasta1)         
dim(fasta1$ali)  
```

```{r}
print(class(fasta1))
print(names(fasta1))
print(dim(fasta1$ali))
```
```{r}
str(fasta1)
```

```{r}
find("seqidentity")
```


```{r}
library(bio3d)
id_matrix1 <- seqidentity(fasta1)
```

```{r}
pheatmap(id_matrix2,
         cluster_rows = TRUE,
         cluster_cols = TRUE,
         main = "Sequence Identity Heatmap",
         fontsize = 7,
         fontsize_number = 7,
         cellwidth = 15,
         cellheight = 15) 
```


## Predicted Alignment Error for domains

```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files <- list.files(path=pth,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
pae_files
```

```{r}
pae1 <- read_json(pae_files[1],simplifyVector = TRUE)
pae5 <- read_json(pae_files[5],simplifyVector = TRUE)

attributes(pae1)
```

```{r}
# Per-residue pLDDT scores 
#  same as B-factor of PDB..
head(pae1$plddt)
```

```{r}
pae1$max_pae
```

```{r}
pae5$max_pae
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)")
```

```{r}
plot.dmat(pae5$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

## Score Residue conservation from alignment file

AlphaFold returns its large alignment file used for analysis. 
Here we read this file and score conservation per position. 

```{r}
aln_file <- list.files(path=pth,
                       pattern=".a3m$",
                        full.names = TRUE)
aln_file
```

Read the alignment file. 
```{r}
aln <- read.fasta(aln_file[1], to.upper = TRUE)
```

```{r}
dim(aln$ali)
```

We can score residue conservation in the alignment with the `conserv()` function.

```{r}
sim <- conserv(aln)
```

```{r}
plotb3(sim[1:99],
       ylab="Conservation Score")
```

Find the consensus sequence at a very high cut-off to find invariant residues.
```{r}
con <- consensus(aln, cutoff = 0.7)
con$seq
```
Notes: P11 and F17 seems like to be a conserved residue. 


## Predicted Alignment Error for domains 

```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files <- list.files(path=pth,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
pae_files
```
```{r}
pae1 <- read_json(pae_files[1],simplifyVector = TRUE)
pae5 <- read_json(pae_files[5],simplifyVector = TRUE)

attributes(pae1)
```

```{r}
# Per-residue pLDDT scores 
#  same as B-factor of PDB..
head(pae1$plddt)
```

```{r}
pae1$max_pae
```

```{r}
pae5$max_pae
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)")
```

```{r}
plot.dmat(pae5$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

```{r}
pae1$plddt
```


Question 8: 
```{r}
library(bio3d)
```

```{r}
head(fasta1)
```


```{r}
blast <- blast.pdb(fasta1)
```

